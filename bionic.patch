From cfb2950914b27d038b2ba0b7fca5581fb965c0f7 Mon Sep 17 00:00:00 2001
From: xc-racer99 <xc-racer2@live.ca>
Date: Tue, 12 Apr 2016 19:02:17 -0700
Subject: [PATCH 1/2] bionic: Restore non-pie support

---
 linker/Android.mk | 4 ++++
 linker/linker.cpp | 2 ++
 2 files changed, 6 insertions(+)

diff --git a/linker/Android.mk b/linker/Android.mk
index 4a4ca5c..a02657a 100644
--- a/linker/Android.mk
+++ b/linker/Android.mk
@@ -54,6 +54,10 @@ ifeq ($(TARGET_IS_64_BIT),true)
 LOCAL_CPPFLAGS += -DTARGET_IS_64_BIT
 endif
 
+ifeq ($(TARGET_ENABLE_NON_PIE_SUPPORT),true)
+    LOCAL_CFLAGS += -DENABLE_NON_PIE_SUPPORT
+endif
+
 # We need to access Bionic private headers in the linker.
 LOCAL_CFLAGS += -I$(LOCAL_PATH)/../libc/
 
diff --git a/linker/linker.cpp b/linker/linker.cpp
index 39aa2ca..1b5ccda 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -4240,11 +4240,13 @@ static ElfW(Addr) __linker_init_post_relocation(KernelArgumentBlock& args, ElfW(
   }
   si->dynamic = nullptr;
 
+#ifndef ENABLE_NON_PIE_SUPPORT
   ElfW(Ehdr)* elf_hdr = reinterpret_cast<ElfW(Ehdr)*>(si->base);
   if (elf_hdr->e_type != ET_DYN) {
     __libc_fatal("\"%s\": error: only position independent executables (PIE) are supported.",
                  args.argv[0]);
   }
+#endif
 
   // Use LD_LIBRARY_PATH and LD_PRELOAD (but only if we aren't setuid/setgid).
   parse_LD_LIBRARY_PATH(ldpath_env);
-- 
2.7.4


From b1ddaf4260a46e03e48f6b8337944894fe1574cc Mon Sep 17 00:00:00 2001
From: Kyle Repinski <repinski23@gmail.com>
Date: Sat, 27 Aug 2016 20:19:20 -0500
Subject: [PATCH 2/2] linker: Add build flag to allow text relocations for
 platform libs.

---
 linker/Android.mk | 4 ++++
 linker/linker.cpp | 6 ++++++
 2 files changed, 10 insertions(+)

diff --git a/linker/Android.mk b/linker/Android.mk
index 47feaab..0fe508d 100644
--- a/linker/Android.mk
+++ b/linker/Android.mk
@@ -63,6 +63,10 @@ ifeq ($(TARGET_ENABLE_NON_PIE_SUPPORT),true)
     LOCAL_CFLAGS += -DENABLE_NON_PIE_SUPPORT
 endif
 
+ifeq ($(TARGET_NEEDS_PLATFORM_TEXTRELS),true)
+LOCAL_CFLAGS += -DALLOW_PLATFORM_TEXTRELS
+endif
+
 # We need to access Bionic private headers in the linker.
 LOCAL_CFLAGS += -I$(LOCAL_PATH)/../libc/
 
diff --git a/linker/linker.cpp b/linker/linker.cpp
index 1b5ccda..75d15c3 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -3923,8 +3923,14 @@ bool soinfo::link_image(const soinfo_list_t& global_group, const soinfo_list_t&
 
 #if !defined(__LP64__)
   if (has_text_relocations) {
+#ifndef ALLOW_PLATFORM_TEXTRELS
     // Fail if app is targeting sdk version > 22
     if (get_application_target_sdk_version() > 22) {
+#else
+    // Some devices require an exception for platform libs (e.g. vendor libs)
+    if (get_application_target_sdk_version() != __ANDROID_API__ &&
+        get_application_target_sdk_version() > 22) {
+#endif
       PRINT("%s: has text relocations", get_realpath());
       DL_ERR("%s: has text relocations", get_realpath());
       return false;
-- 
2.7.4
