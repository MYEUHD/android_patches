From a91219554f6b9a2f5b2d0fa3700d7b9457141a43 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Thu, 5 Dec 2013 13:26:35 +0700
Subject: [PATCH 1/2] screenrecord: allow force landscape mode

Some devices' hardware encoder do not support encoding over a
specified height, which may be smaller than the device's display
height in portrait mode. Add a mode which uses landscape encoding
and rotation hint to overcome the limitation.

Change-Id: Icdd8de05d55c2aaaacbcaba4857173c78ef76a24

Conflicts:
	cmds/screenrecord/screenrecord.cpp
---
 cmds/screenrecord/Android.mk       |  4 ++++
 cmds/screenrecord/screenrecord.cpp | 20 +++++++++++++++++++-
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/cmds/screenrecord/Android.mk b/cmds/screenrecord/Android.mk
index 6747e6015..d9a1e8770 100644
--- a/cmds/screenrecord/Android.mk
+++ b/cmds/screenrecord/Android.mk
@@ -16,6 +16,10 @@ LOCAL_PATH:= $(call my-dir)
 
 include $(CLEAR_VARS)
 
+ifeq ($(BOARD_SCREENRECORD_LANDSCAPE_ONLY),true)
+	LOCAL_CFLAGS += -DLANDSCAPE_ONLY
+endif
+
 LOCAL_SRC_FILES := \
 	screenrecord.cpp \
 	EglWindow.cpp \
diff --git a/cmds/screenrecord/screenrecord.cpp b/cmds/screenrecord/screenrecord.cpp
index 59d566127..7fb656258 100644
--- a/cmds/screenrecord/screenrecord.cpp
+++ b/cmds/screenrecord/screenrecord.cpp
@@ -65,6 +65,13 @@ static const uint32_t kFallbackWidth = 1280;        // 720p
 static const uint32_t kFallbackHeight = 720;
 static const char* kMimeTypeAvc = "video/avc";
 
+// Build-time parameters.
+#ifdef LANDSCAPE_ONLY
+static bool gLandscapeOnly = true;          // Only encode in landscape
+#else
+static bool gLandscapeOnly = false;
+#endif
+
 // Command-line parameters.
 static bool gVerbose = false;           // chatty on stdout
 static bool gRotate = false;            // rotate 90 degrees
@@ -560,6 +567,17 @@ static status_t recordScreen(const char* fileName) {
         gVideoHeight = rotated ? mainDpyInfo.w : mainDpyInfo.h;
     }
 
+    // Some devices cannot handle encoding tall height (> 720), so we
+    // compensate by encoding in landscape and rotating
+    bool autoRotated = false;
+    if (gLandscapeOnly && !gSizeSpecified && gVideoHeight > gVideoWidth) {
+        int newWidth = gVideoHeight;
+        gVideoHeight = gVideoWidth;
+        gVideoWidth = newWidth;
+        gRotate = !gRotate;
+        autoRotated = true;
+    }
+
     // Configure and start the encoder.
     sp<MediaCodec> encoder;
     sp<FrameOutput> frameOutput;
@@ -650,7 +668,7 @@ static status_t recordScreen(const char* fileName) {
             muxer = new MediaMuxer(fd, MediaMuxer::OUTPUT_FORMAT_MPEG_4);
             close(fd);
             if (gRotate) {
-                muxer->setOrientationHint(90);  // TODO: does this do anything?
+                muxer->setOrientationHint(autoRotated ? 270 : 90);
             }
             break;
         }
-- 
2.11.0


From 3f54b66c10d002dbf5edc81bccd65bf14af1697d Mon Sep 17 00:00:00 2001
From: MYEUHD <MYEUHD@protonmail.com>
Date: Tue, 25 Dec 2018 16:04:48 +0100
Subject: [PATCH 2/2] libstagefright: Make it possible to opt-in to skipping OMX
 buffer reallocation

Change-Id: I8d3f3f4d28860021d294a68c5888ecef76910f78
---
 media/libstagefright/Android.mk | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/media/libstagefright/Android.mk b/media/libstagefright/Android.mk
index f43c200..3c59184 100644
--- a/media/libstagefright/Android.mk
+++ b/media/libstagefright/Android.mk
@@ -139,6 +139,10 @@ ifeq ($(TARGET_BOARD_PLATFORM),omap4)
 LOCAL_CFLAGS += -DBOARD_CANT_REALLOCATE_OMX_BUFFERS
 endif
 
+ifeq ($(BOARD_CANT_REALLOCATE_OMX_BUFFERS),true)
+LOCAL_CFLAGS += -DBOARD_CANT_REALLOCATE_OMX_BUFFERS
+endif
+
 LOCAL_CLANG := true
 LOCAL_SANITIZE := unsigned-integer-overflow signed-integer-overflow
 
-- 
2.19.2

