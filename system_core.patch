From f1c9edeb78e2c28f43108cc7437cdd641b364cd7 Mon Sep 17 00:00:00 2001
From: xc-racer99 <xc-racer2@live.ca>
Date: Thu, 25 Aug 2016 21:31:18 -0700
Subject: [PATCH 1/2] core: Don't try to flash recovery

Just don't.  Would totally screw up the device if it succeeded...
---
 rootdir/init.rc | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/rootdir/init.rc b/rootdir/init.rc
index 3466dce..b3709d6 100644
--- a/rootdir/init.rc
+++ b/rootdir/init.rc
@@ -636,6 +636,6 @@ on property:ro.debuggable=1
     chmod 0773 /data/misc/trace
     start console
 
-service flash_recovery /system/bin/install-recovery.sh
-    class main
-    oneshot
+#service flash_recovery /system/bin/install-recovery.sh
+#    class main
+#    oneshot
-- 
2.7.4

From 63e268ee77abcbb972da42efc64fc96eccfe0aff Mon Sep 17 00:00:00 2001
From: xc-racer99 <xc-racer2@live.ca>
Date: Fri, 30 Sep 2016 09:37:56 -0700
Subject: [PATCH 2/2] Revert "libnetutils: Add synchronization per socket full
 operation"

Wreaks havoc with our data connection
This reverts commit cebcd450c6ca3de5106ef3d817d5b760f5d57fbe.
---
 libnetutils/dhcptool.c  | 7 ++-----
 libnetutils/ifc_utils.c | 9 ---------
 2 files changed, 2 insertions(+), 14 deletions(-)

diff --git a/libnetutils/dhcptool.c b/libnetutils/dhcptool.c
index d23afd3..5dfb3e8 100644
--- a/libnetutils/dhcptool.c
+++ b/libnetutils/dhcptool.c
@@ -14,7 +14,6 @@
  * limitations under the License.
  */
 
-#include <err.h>
 #include <errno.h>
 #include <error.h>
 #include <stdbool.h>
@@ -31,14 +30,12 @@ int main(int argc, char* argv[]) {
 
   char* interface = argv[1];
   if (ifc_init()) {
-    err(errno, "dhcptool %s: ifc_init failed", interface);
-    ifc_close();
-    return EXIT_FAILURE;
+    error(EXIT_FAILURE, errno, "dhcptool %s: ifc_init failed", interface);
   }
 
   int rc = do_dhcp(interface);
   if (rc) {
-    err(errno, "dhcptool %s: do_dhcp failed", interface);
+    error(0, errno, "dhcptool %s: do_dhcp failed", interface);
   }
 
   ifc_close();
diff --git a/libnetutils/ifc_utils.c b/libnetutils/ifc_utils.c
index eae32ce..f9f62f8 100644
--- a/libnetutils/ifc_utils.c
+++ b/libnetutils/ifc_utils.c
@@ -19,7 +19,6 @@
 #include <unistd.h>
 #include <string.h>
 #include <errno.h>
-#include <pthread.h>
 
 #include <sys/socket.h>
 #include <sys/select.h>
@@ -58,8 +57,6 @@
 
 static int ifc_ctl_sock = -1;
 static int ifc_ctl_sock6 = -1;
-static pthread_mutex_t ifc_sock_mutex = PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP;
-static pthread_mutex_t ifc_sock6_mutex = PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP;
 void printerr(char *fmt, ...);
 
 #define DBG 0
@@ -125,8 +122,6 @@ int string_to_ip(const char *string, struct sockaddr_storage *ss) {
 int ifc_init(void)
 {
     int ret;
-
-    pthread_mutex_lock(&ifc_sock_mutex);
     if (ifc_ctl_sock == -1) {
         ifc_ctl_sock = socket(AF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
         if (ifc_ctl_sock < 0) {
@@ -141,7 +136,6 @@ int ifc_init(void)
 
 int ifc_init6(void)
 {
-    pthread_mutex_lock(&ifc_sock6_mutex);
     if (ifc_ctl_sock6 == -1) {
         ifc_ctl_sock6 = socket(AF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
         if (ifc_ctl_sock6 < 0) {
@@ -158,7 +152,6 @@ void ifc_close(void)
         (void)close(ifc_ctl_sock);
         ifc_ctl_sock = -1;
     }
-    pthread_mutex_unlock(&ifc_sock_mutex);
 }
 
 void ifc_close6(void)
@@ -167,7 +160,6 @@ void ifc_close6(void)
         (void)close(ifc_ctl_sock6);
         ifc_ctl_sock6 = -1;
     }
-    pthread_mutex_unlock(&ifc_sock6_mutex);
 }
 
 static void ifc_init_ifr(const char *name, struct ifreq *ifr)
@@ -561,7 +553,6 @@ int ifc_act_on_ipv4_route(int action, const char *ifname, struct in_addr dst, in
     ifc_init();
 
     if (ifc_ctl_sock < 0) {
-        ifc_close();
         return -errno;
     }
 
-- 
2.7.4

